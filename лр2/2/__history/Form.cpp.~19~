//---------------------------------------------------------------------------

#include <vcl.h>
#include <stdio.h>
#pragma hdrstop
#include "Schedule.h"
#include "Form.h"
#include "FormPlanes.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm1 *Form1;
//---------------------------------------------------------------------------
__fastcall TForm1::TForm1(TComponent* Owner)
	: TForm(Owner)
{
}
//---------------------------------------------------------------------------
AnsiString FileSchedule="d:\\учеба\\ОАиП\\лр вып 2\\лр2\\2\\Win32\\Debug\\schedule.txt";
AnsiString FilePlanes="d:\\учеба\\ОАиП\\лр вып 2\\лр2\\2\\Win32\\Debug\\planes.txt";
void __fastcall TForm1::Button1Click(TObject *Sender)
{	FormPlane->Show();}
//---------------------------------------------------------------------------
void __fastcall TForm1::FormActivate(TObject *Sender)
{
	Button3->Click();
	int amount,i;
	TFileStream* f;
	f=new TFileStream(FileSchedule,fmOpenRead);
	f->Read(&amount,sizeof(int));
	Edit1->Text=IntToStr(amount+1);
	delete f;
	if (amount<=5) StringGrid1->Height=(amount+1)*(StringGrid1->DefaultRowHeight+1);
	else {
		StringGrid1->Height=(6)*(StringGrid1->DefaultRowHeight+1);
    }
	Button6->Top=StringGrid1->Top+StringGrid1->Height+150;
	Label1->Top=StringGrid1->Top+StringGrid1->Height+50;
	Edit1->Top=StringGrid1->Top+StringGrid1->Height+50;
	Button2->Top=StringGrid1->Top+StringGrid1->Height+50;
	Button2->Left=800;
	Edit1->Left=Button2->Left-200;
	Label1->Left=Edit1->Left-360;
	Button5->Top=Button6->Top;
	Button4->Top=Button6->Top;
	Button1->Top=Button6->Top;
	Button9->Top=Button6->Top;
	Button7->Top=Button6->Top;
	Button8->Top=Button6->Top;
	Button12->Top=Button6->Top;
	Button13->Top=Button6->Top;
	Button14->Top=Button6->Top;
	StringGrid1->RowCount=amount+1;
	StringGrid1->Cells[0][0]="Номер рейса";
	StringGrid1->Cells[1][0]="Пункт назначения";
	StringGrid1->Cells[2][0]="Дальность полета";
	StringGrid1->Cells[3][0]="Тип самолета";
	StringGrid1->Cells[4][0]="Время вылета";
	StringGrid1->Cells[5][0]="Время приземления";
	f=new TFileStream(FileSchedule,fmOpenRead);
	Schedule* array=new Schedule[amount];
	f->Seek(sizeof(int),soBeginning);
	f->Read(array,sizeof(class Schedule)*amount);
	delete f;
	for (i = 1; i <= amount; i++) {
		AnsiString beginTimeHours,beginTimeMinutes,endTimeHours,endTimeMinutes;
		if (array[i-1].getBeginTimeHours()<10) beginTimeHours="0"+IntToStr(array[i-1].getBeginTimeHours());
		else beginTimeHours=IntToStr(array[i-1].getBeginTimeHours());
		if (array[i-1].getBeginTimeMinutes()<10) beginTimeMinutes="0"+IntToStr(array[i-1].getBeginTimeMinutes());
		else beginTimeMinutes=IntToStr(array[i-1].getBeginTimeMinutes());
		if (array[i-1].getEndTimeHours()<10) endTimeHours="0"+IntToStr(array[i-1].getEndTimeHours());
		else endTimeHours=IntToStr(array[i-1].getEndTimeHours());
		if (array[i-1].getEndTimeMinutes()<10) endTimeMinutes="0"+IntToStr(array[i-1].getEndTimeMinutes());
		else endTimeMinutes=IntToStr(array[i-1].getEndTimeMinutes());
		AnsiString beginTime=beginTimeHours+":"+beginTimeMinutes;
		AnsiString endTime=endTimeHours+":"+endTimeMinutes;
		AnsiString dest=AnsiString(array[i-1].getDestination());
		AnsiString type=AnsiString(array[i-1].getPlaneType());
		StringGrid1->Cells[0][i]=IntToStr(array[i-1].getFlightNumber());
		StringGrid1->Cells[1][i]=dest;
		StringGrid1->Cells[2][i]=IntToStr(array[i-1].getDistance());
		StringGrid1->Cells[3][i]=type;
		StringGrid1->Cells[4][i]=beginTime;
		StringGrid1->Cells[5][i]=endTime;
	}
	delete []array;
}
//---------------------------------------------------------------------------
void __fastcall TForm1::Button3Click(TObject *Sender)
{
		TFileStream* f;
		if (!FileExists(FileSchedule)) {
			f=new TFileStream(FileSchedule,fmCreate);
			int a=0;
			f->Write(&a,sizeof(int));
			delete f;
		}
		if (!FileExists(FilePlanes)) {
			TFileStream* f=new TFileStream(FilePlanes,fmCreate);
			int a=0;
			f->Write(&a,sizeof(int));
			delete f;
		}
		int amount;
		f=new TFileStream(FilePlanes,fmOpenRead);
		f->Read(&amount,sizeof(int));
		delete f;
		Aircraft* array=new Aircraft[amount];
		f=new TFileStream(FilePlanes,fmOpenRead);
		f->Seek(sizeof(int),soBeginning);
		f->Read(array,sizeof(class Aircraft)*amount);
		delete f;
		int i;
		ComboBox1->Items->Clear();
		for (i=0;i<amount;i++){
			ComboBox1->Items->Add(array[i].getType());
		}
		delete []array;
}
//---------------------------------------------------------------------------
Schedule ob1;
void __fastcall TForm1::Button2Click(TObject *Sender)
{
	if (Label1->Caption=="Введите номер рейса:") {
		if (Edit1->Text!="" && isWithoutSymbols(Edit1->Text)==true) {
			ob1.setFlightNumber(StrToInt(Edit1->Text));
			Label1->Caption="Введите пункт назначения:";
			Edit1->Tag=2;
			Edit1->Text="";
		}
		else {
			Edit1->Color=clRed;
			Timer1->Enabled=true;
		}
	}
	if (Label1->Caption=="Введите пункт назначения:") {
		if (Edit1->Text!="") {
			ob1.setDestination(Edit1->Text);
			Label1->Caption="Введите дальность полета:" ;
			Edit1->Tag=3;
			Edit1->Text="";
			Edit1->Width=100;
			Label2->Caption="км";
			Label2->Left=Edit1->Left+Edit1->Width;
			Label2->Top=Edit1->Top;
			Label2->Visible=true;
		}
	}
	if (Label1->Caption=="Введите дальность полета:") {
		if (Edit1->Text!="" && isWithoutSymbols(Edit1->Text)==true) {
			ob1.setDistance(StrToInt(Edit1->Text));
			Label1->Caption="Выберите тип самолета:";
			Edit1->Tag=4;
			Edit1->Text="";
			Edit1->Width=150;
			ComboBox1->Width=Edit1->Width;
			ComboBox1->Left=Edit1->Left;
			ComboBox1->Top=Edit1->Top;
			Edit1->Visible=false;
			ComboBox1->Visible=true;
			Label2->Visible=false;
			Label2->Caption=":";
		}
		else if (Edit1->Text.Length()!=0){
			Edit1->Color=clRed;
			Timer1->Enabled=true;
		}
	}
	if (Label1->Caption=="Выберите тип самолета:") {
		if (ComboBox1->Text!="") {
			AnsiString ComboText=ComboBox1->Text;
			TFileStream* f;
			int amount,i;
			f=new TFileStream(FilePlanes,fmOpenRead);
			f->Read(&amount,sizeof(int));
			delete f;
			Aircraft* array=new Aircraft[amount];
			f=new TFileStream(FilePlanes,fmOpenRead);
			f->Seek(sizeof(int),soBeginning);
			f->Read(array,sizeof(class Aircraft)*amount);
			delete f;
			for (i = 0; i <amount; i++) {
				if (array[i].getIndex()==ComboBox1->ItemIndex) {
					ob1.setPlane(array[i]);
					break;
				}
			}
			ComboBox1->Visible=false;
			ComboBox1->Text="";
			Edit1->Width=55;
			Edit2->Width=55;
			Label2->Left=Edit1->Left+Edit1->Width;
			Label2->Top=Edit1->Top;
			Edit2->Left=Label2->Left+Label2->Width;
			Edit2->Top=Edit1->Top;
			Edit2->Visible=true;
			Edit1->Visible=true;
			Label2->Visible=true;
			Label1->Caption="Введите время вылета:";
			Edit1->Tag=5;
			delete []array;
		}
	}
	if (Label1->Caption=="Введите время вылета:") {
		if (isWithoutSymbols(Edit1->Text)==true && isWithoutSymbols(Edit2->Text)==true) {
			if (Edit1->Text!="" && Edit2->Text!="") {
				bool isRight=true;
				ob1.setBeginTimeHours(StrToInt(Edit1->Text));
				ob1.setBeginTimeMinutes(StrToInt(Edit2->Text));
				if (ob1.getBeginTimeHours()>=24 || ob1.getBeginTimeHours()<0) {
					ShowMessage("Неправильное время!");
					Edit1->Text="";
					ob1.setBeginTimeHours(0);
					isRight=false;
				}
				if (ob1.getBeginTimeMinutes()>=60 || ob1.getBeginTimeMinutes()<0) {
					ShowMessage("Неправильное время!");
					Edit2->Text="";
					ob1.setBeginTimeMinutes(0);
					isRight=false;
				}
				if (isRight==true) {
					Edit1->Text="";
					Edit2->Text="";
					Label1->Caption="Введите время приземления:";
					Edit1->Tag=6;
				}
			}
		}
		else {
			Edit1->Color=clRed;
			Edit2->Color=clRed;
			Timer1->Enabled=true;
		}
	}
	if (Label1->Caption=="Введите время приземления:") {
		if (isWithoutSymbols(Edit1->Text)==true && isWithoutSymbols(Edit2->Text)==true) {
			if (Edit1->Text!="" && Edit2->Text!="") {
				bool isRight=true;
				ob1.setEndTimeHours(StrToInt(Edit1->Text));
				ob1.setEndTimeMinutes(StrToInt(Edit2->Text));
				if (ob1.getEndTimeHours()<0 || ob1.getEndTimeHours()>=24) {
					ShowMessage("Неправильное время!");
					Edit1->Text="";
					ob1.setEndTimeHours(0);
					isRight=false;
				}
				if (ob1.getEndTimeMinutes()<0 || ob1.getEndTimeMinutes()>=60) {
					ShowMessage("Неправильное время!");
					Edit2->Text="";
					ob1.setEndTimeMinutes(0);
					isRight=false;
				}
				if (ob1.getBeginTimeHours()>=ob1.getEndTimeHours()) {
					if (ob1.getBeginTimeMinutes()>=ob1.getEndTimeMinutes()) {
						ShowMessage("Посадка не может произойти раньше, чем взлёт в "+IntToStr(ob1.getEndTimeHours())+":"+IntToStr(ob1.getEndTimeMinutes()));
						Edit2->Text="";
						Edit1->Text="";
						ob1.setEndTimeMinutes(0);
						ob1.setEndTimeHours(0);
						isRight=false;
					}
				}
				if (isRight==true) {
					Edit1->Text="";
					Edit2->Text="";
					Label1->Caption="Введите номер рейса:";
					Edit1->Tag=1;
					TFileStream* f;
					int amount;
					f=new TFileStream(FileSchedule,fmOpenRead);
					f->Read(&amount,sizeof(int));
					delete f;
					Schedule* array=new Schedule[amount+1];
					f=new TFileStream(FileSchedule,fmOpenRead);
					f->Seek(sizeof(int),soBeginning);
					f->Read(array,sizeof(class Schedule)*amount);
					delete f;
					amount+=1;
					array[amount-1]=ob1;
					f=new TFileStream(FileSchedule,fmOpenWrite);
					f->Write(&amount,sizeof(int));
					f->Write(array,sizeof(class Schedule)*amount);
					delete f;
					Form1->Activate();
					Label2->Visible=false;
					Edit2->Visible=false;
					Edit2->Text="";
					Edit1->Width=150;
					delete []array;
				}
			}
		}
		else {
			Edit1->Color=clRed;
			Timer1->Enabled=true;
		}
	}
}
//---------------------------------------------------------------------------

void __fastcall TForm1::Button4Click(TObject *Sender)
{
	TFileStream* f;
	DeleteFile(FileSchedule);
	f=new TFileStream(FileSchedule,fmCreate);
	int a=0;
	f->Write(&a,sizeof(int));
	delete f;
	Form1->Activate();
}
//---------------------------------------------------------------------------

void __fastcall TForm1::Button5Click(TObject *Sender)
{
	TFileStream* f;
	int amount;
	f=new TFileStream(FileSchedule,fmOpenRead);
	f->Read(&amount,sizeof(int));
	delete f;
	amount-=1;
	Schedule* array=new Schedule[amount];
	f=new TFileStream(FileSchedule,fmOpenRead);
	f->Seek(sizeof(int),soBeginning);
	f->Read(array,sizeof(class Schedule)*amount);
	delete f;
	DeleteFile(FileSchedule);
	f=new TFileStream(FileSchedule,fmCreate);
	f->Write(&amount,sizeof(int));
	f->Write(array,sizeof(class Schedule)*amount);
	delete f;
	Form1->Activate();
	delete []array;
}
//---------------------------------------------------------------------------
void __fastcall TForm1::Button6Click(TObject *Sender)
{
	TFileStream* f;
	int amount;
	f=new TFileStream(FileSchedule,fmOpenRead);
	f->Read(&amount,sizeof(int));
	delete f;
	Schedule* array=new Schedule[amount];
	f=new TFileStream(FileSchedule,fmOpenRead);
	f->Seek(sizeof(int),soBeginning);
	f->Read(array,sizeof(class Schedule)*amount);
	delete f;
	int fuelAmount=0,i;
	for (i = 0; i < amount; i++) {
		fuelAmount+=array[i].getPlaneFuel()*array[i].getDistance()/1000;
	}
	ShowMessage("На следующие сутки необходимо "+IntToStr(fuelAmount)+" литров топлива");
	delete []array;
}
//---------------------------------------------------------------------------

void __fastcall TForm1::Button7Click(TObject *Sender)
{
	TFileStream* f;
	int amount;
	f=new TFileStream(FileSchedule,fmOpenRead);
	f->Read(&amount,sizeof(int));
	delete f;
	Schedule* array=new Schedule[amount];
	f=new TFileStream(FileSchedule,fmOpenRead);
	f->Seek(sizeof(int),soBeginning);
	f->Read(array,sizeof(class Schedule)*amount);
	delete f;
	Schedule temp;
	int i,j;
	for (i = 0; i < amount; i++) {
		for (j=1; j < amount; j++) {
			if (array[j-1].getBeginTimeHours()==array[j].getBeginTimeHours()) {
				if (array[j-1].getBeginTimeMinutes()>array[j].getBeginTimeMinutes()) {
					temp=array[j-1];
					array[j-1]=array[j];
					array[j]=temp;
				}
			}
			if (array[j-1].getBeginTimeHours()>array[j].getBeginTimeHours()) {
				temp=array[j-1];
				array[j-1]=array[j];
				array[j]=temp;
			}
		}
	}
	DeleteFile(FileSchedule);
	f=new TFileStream(FileSchedule,fmCreate);
	f->Write(&amount,sizeof(int));
	f->Write(array,sizeof(class Schedule)*amount);
	delete f;
	Form1->Activate();
	delete []array;
}
//---------------------------------------------------------------------------

void __fastcall TForm1::Button8Click(TObject *Sender)
{
	TFileStream* f;
	int amount;
	f=new TFileStream(FileSchedule,fmOpenRead);
	f->Read(&amount,sizeof(int));
	delete f;
	Schedule* array=new Schedule[amount];
	f=new TFileStream(FileSchedule,fmOpenRead);
	f->Seek(sizeof(int),soBeginning);
	f->Read(array,sizeof(class Schedule)*amount);
	delete f;
	Schedule temp;
	int i,j;
	for (i = 0; i < amount; i++) {
		for (j=1; j < amount; j++) {
			if (array[j-1].getFlightNumber()>array[j].getFlightNumber()) {
				temp=array[j-1];
				array[j-1]=array[j];
				array[j]=temp;
			}
		}
	}
	DeleteFile(FileSchedule);
	f=new TFileStream(FileSchedule,fmCreate);
	f->Write(&amount,sizeof(int));
	f->Write(array,sizeof(class Schedule)*amount);
	delete f;
	Form1->Activate();
	delete []array;
}
//---------------------------------------------------------------------------

void __fastcall TForm1::Button9Click(TObject *Sender)
{
	Label1->Caption="Введите пункт назначения:";
	Button2->Visible=false;
	Edit1->Text="";
	Button10->Left=Button2->Left;
	Button10->Top=Button2->Top;
	Button10->Visible=true;
	Button11->Left=Button10->Left+20+Button10->Width;
	Button11->Top= Button10->Top;
	Button11->Visible=true;
}
//---------------------------------------------------------------------------

void __fastcall TForm1::Button10Click(TObject *Sender)
{
	if (Edit1->Text!=0) {
		TFileStream* f;
		int amount,i,j=0,newAmount=0;
		f=new TFileStream(FileSchedule,fmOpenRead);
		f->Read(&amount,sizeof(int));
		delete f;
		Schedule* array=new Schedule[amount];
		f=new TFileStream(FileSchedule,fmOpenRead);
		f->Seek(sizeof(int),soBeginning);
		f->Read(array,sizeof(class Schedule)*amount);
		delete f;
		AnsiString search=Edit1->Text;
		for (i = 1; i <= amount; i++) {
			if (search==StringGrid1->Cells[1][i]) {
				newAmount++;
			}
		}
		Schedule* newArray=new Schedule[newAmount];
		for (i = 1; i <= amount; i++) {
			if (search==StringGrid1->Cells[1][i]) {
				newArray[j]=array[i-1];
				j++;
			}
		}
		StringGrid1->RowCount=newAmount+1;
		for (i = 1; i <= newAmount; i++) {
			AnsiString beginTimeHours,beginTimeMinutes,endTimeHours,endTimeMinutes;
			if (newArray[i-1].getBeginTimeHours()<10) beginTimeHours="0"+IntToStr(newArray[i-1].getBeginTimeHours());
			else beginTimeHours=IntToStr(newArray[i-1].getBeginTimeHours());
			if (newArray[i-1].getBeginTimeMinutes()<10) beginTimeMinutes="0"+IntToStr(newArray[i-1].getBeginTimeMinutes());
			else beginTimeMinutes=IntToStr(newArray[i-1].getBeginTimeMinutes());
			if (newArray[i-1].getEndTimeHours()<10) endTimeHours="0"+IntToStr(newArray[i-1].getEndTimeHours());
			else endTimeHours=IntToStr(newArray[i-1].getEndTimeHours());
			if (newArray[i-1].getEndTimeMinutes()<10) endTimeMinutes="0"+IntToStr(newArray[i-1].getEndTimeMinutes());
			else endTimeMinutes=IntToStr(newArray[i-1].getEndTimeMinutes());
			AnsiString beginTime=beginTimeHours+":"+beginTimeMinutes;
			AnsiString endTime=endTimeHours+":"+endTimeMinutes;
			StringGrid1->Cells[0][i]=IntToStr(newArray[i-1].getFlightNumber());
			StringGrid1->Cells[1][i]=AnsiString(newArray[i-1].getDestination());
			StringGrid1->Cells[2][i]=IntToStr(newArray[i-1].getDistance());
			StringGrid1->Cells[3][i]=AnsiString(newArray[i-1].getPlaneType());
			StringGrid1->Cells[4][i]=beginTime;
			StringGrid1->Cells[5][i]=endTime;
		}
		Edit1->Text="";
		Label1->Caption="Введите номер рейса:";
		Button2->Visible=true;
		Button10->Visible=false;
		delete []newArray;
		delete []array;
	}
}
//---------------------------------------------------------------------------

void __fastcall TForm1::Button11Click(TObject *Sender)
{
	Label1->Caption="Введите номер рейса:";
	Button10->Visible=false;
	Button11->Visible=false;
	Edit1->Text="";
	Button2->Visible=true;
	Form1->Activate();
	Button11->Visible=false;
}
//---------------------------------------------------------------------------
void __fastcall TForm1::Button14Click(TObject *Sender)
{
	Form1->Close();
}
//---------------------------------------------------------------------------

void __fastcall TForm1::Button12Click(TObject *Sender)
{
	if (OpenDialog1->Execute()) {
		FileSchedule=OpenDialog1->FileName;
		Form1->Activate();
	}
}
//---------------------------------------------------------------------------

void __fastcall TForm1::Button13Click(TObject *Sender)
{
	if (SaveDialog1->Execute()){
		TFileStream* f;
		int amount;
		f=new TFileStream(FileSchedule,fmOpenRead);
		f->Read(&amount,sizeof(int));
		delete f;
		Schedule* array=new Schedule[amount];
		f=new TFileStream(FileSchedule,fmOpenRead);
		f->Seek(sizeof(int),soBeginning);
		f->Read(array,sizeof(class Schedule)*amount);
		delete f;
		f=new TFileStream(SaveDialog1->FileName+".txt",fmCreate);
		f->Write(&amount,sizeof(int));
		f->Write(array,sizeof(class Schedule)*amount);
		delete f;
		delete []array;
	}
}
//---------------------------------------------------------------------------

void __fastcall TForm1::Edit1KeyPress(TObject *Sender, System::WideChar &Key)
{
	if (Key==13) {
		bool isRight;
		AnsiString temp1=Edit1->Text,text1="";
		AnsiString temp2=Edit2->Text,text2="";
		int i,length=temp1.Length();
		switch (Edit1->Tag) {
			case 3:
			case 1:
				isRight=true;
				for (i = 1; i <= length;i++) {
					if (temp1[i]>=48 && temp1[i]<58) {
						text1+=temp1[i];
					}
					else isRight=false;
				}
				if (isRight==false) {
					Edit1->Text=text1;
					Edit1->Color=clRed;
					Timer1->Tag=1;
					Timer1->Enabled=true;
				}
				else Button2->Click();
				break;
			case 5:
			case 6:
				Edit2->SetFocus();
			default: Button2->Click();
		}
	}
}
//---------------------------------------------------------------------------

void __fastcall TForm1::Timer1Timer(TObject *Sender)
{
	switch (Timer1->Tag) {
		case 1:
		default: Edit1->Color=clWhite; Edit2->Color=clWhite; break;
	}
}
//---------------------------------------------------------------------------

void __fastcall TForm1::Edit2KeyPress(TObject *Sender, System::WideChar &Key)
{
	if (Key==13) {
		bool isRight=true;
		AnsiString temp1=Edit1->Text,text1="";
		AnsiString temp2=Edit2->Text,text2="";
		int i;
		if (Edit1->Text.Length()<=2 && Edit2->Text.Length()<=2) {
			for (i = 1; i <= 2;i++) {
				if (temp1[i]>=48 && temp1[i]<58) {
					text1+=temp1[i];
				}
				else isRight=false;
				if (temp2[i]>=48 && temp2[i]<58) {
					text2+=temp2[i];
				}
				else isRight=false;
			}
		}
		else {
			isRight=false;
		}
		if (isRight==false) {
			Edit1->Text=text1;
			Edit2->Text=text2;
			Edit1->Color=clRed;
			Edit2->Color=clRed;
			Edit1->SetFocus();
			Timer1->Tag=2;
			Timer1->Enabled=true;
		}
		else Button2->Click();
	}
}
//---------------------------------------------------------------------------

