//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "Form.h"
#include "Unit1.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm1 *Form1;
//---------------------------------------------------------------------------
__fastcall TForm1::TForm1(TComponent* Owner)
	: TForm(Owner)
{
}
//---------------------------------------------------------------------------
Tree tree;

void __fastcall TForm1::FormActivate(TObject *Sender)
{
	StringGrid1->Cells[0][0]="Текст";
	StringGrid1->Cells[1][0]="Число";
	StringGrid1->RowCount=2;
	StringGrid1->Height=StringGrid1->RowCount*StringGrid1->DefaultRowHeight + (StringGrid1->RowCount+1)*StringGrid1->GridLineWidth+3;
}
//---------------------------------------------------------------------------
void __fastcall TForm1::StringGrid1SelectCell(TObject *Sender, int ACol, int ARow,
          bool &CanSelect)
{
	if (ARow == StringGrid1->RowCount-1) {
		bool isNeedToAddCells;
		if (ACol==1) {
			if (StringGrid1->Cells[0][ARow]!="") {
				isNeedToAddCells=true;
			}
			else isNeedToAddCells=false;
		}
		else {
			if (StringGrid1->Cells[1][ARow]!="") {
				isNeedToAddCells=true;
			}
			else isNeedToAddCells=false;
        }

		if (isNeedToAddCells==true){
			StringGrid1->RowCount++;
			if (StringGrid1->RowCount<=8) {
				StringGrid1->Height+=StringGrid1->DefaultRowHeight+StringGrid1->GridLineWidth;
			}
			else StringGrid1->ScrollBars=ssVertical;
		}
	}
}
//---------------------------------------------------------------------------
bool isSymbol(UnicodeString value){
	int i,length=value.Length();
	for (i = 1; i <= length; i++) {
		if (value[i]<'0' || value[i]>'9') {
			if (value[i]!='-') {
				return true;
			}
		}
	}
	return false;
}

void __fastcall TForm1::StringGrid1SetEditText(TObject *Sender, int ACol, int ARow,
          const UnicodeString Value)
{
	if (ACol==1) {
		if (isSymbol(Value)==true) {
			ShowMessage("Не вводите символы!");

			UnicodeString correct="";
			int i,length=Value.Length();
			for (i = 1; i < length; i++) {
				correct+=Value[i];
			}

			StringGrid1->Cells[ACol][ARow]=correct;
		}
	}
}
//---------------------------------------------------------------------------
void __fastcall TForm1::Button1Click(TObject *Sender)
{
	int i;
	for (i = 1; i < StringGrid1->RowCount-1; i++) {

		if (StringGrid1->Cells[1][i]=="") {
			StringGrid1->Cells[1][i]="0";
		}

		TreeItem* newItem;
		try{
			newItem=new TreeItem;
		}
		catch(EOutOfMemory&){
			ShowMessage("Нехватка оперативной памяти");
			return;
		}

		newItem->left=NULL;
		newItem->right=NULL;
		try {
			newItem->number=StrToInt(StringGrid1->Cells[1][i]);
		}
		catch (EConvertError&) {
			ShowMessage("Введено недопустимое число "+StringGrid1->Cells[1][i]);
			newItem->number=0;
		}
		newItem->text=StringGrid1->Cells[0][i];

		tree.add(newItem);
	}


}
//---------------------------------------------------------------------------
