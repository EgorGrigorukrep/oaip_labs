//---------------------------------------------------------------------------

#pragma hdrstop
#include <iostream.h>
#include "UnitStart.h"
#include "UnitCircle.h"
#include "Circ.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)

Circ::Circ(int *cx1,int *cy1,int *r1)
{
	cx=cx1;
	cy=cy1;
	r=r1;
}

void Circ::ris()
{
	int y,x;
	FormCircle->Canvas->MoveTo(*cx,*cy-*r);
	for (y=-(*r)+1; y<=*r; y+=1) {
		x=sqrt(powl(*r,2)-powl(y,2));
		FormCircle->Canvas->LineTo(*cx+x,*cy+y);
	}
	for (y=*r-1; y>=-*r; y-=1) {
		x=sqrt(powl(*r,2)-powl(y,2));
		FormCircle->Canvas->LineTo(*cx-x,*cy+y);
	}
}

float Circ::plosh(){
	return M_PI*(*r)*(*r);
}

float Circ::perim(){
	return 2*M_PI*(*r);
}

bool Circ::peremeshX(int xkon){
	if (*cx<xkon) (*cx)++;
	else (*cx)--;
	draw();
	ris();
	if (*cx==xkon) return true;
	else return false;
}

bool Circ::peremeshY(int ykon){
	if (*cy<ykon) (*cy)++;
	else (*cy)--;
	draw();
	ris();
	if (*cy==ykon) return true;
	else return false;
}
