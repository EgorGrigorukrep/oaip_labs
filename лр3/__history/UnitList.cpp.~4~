//---------------------------------------------------------------------------

#pragma hdrstop

#include "UnitList.h"
#include "Form.h"
#include <vcl.h>
//---------------------------------------------------------------------------
#pragma package(smart_init)
List::List(){
	Head=new ListElement;
	First=Head;
	Head->Next=NULL;
}

List::~List(){
	if (Head!=NULL) {
		Head=First;
		while(Head->Next!=NULL){
			ListElement *temp;
			temp=Head;
			Head=Head->Next;
			delete temp;
		}
		delete Head;
	}
}

void List::addFirstElement(AnsiString name, int amount, int cehNumber){
	Head->Name=name;
	Head->Amount=amount;
	Head->CehNumber=cehNumber;
	Head->Next=NULL;
}

void List::addElement(AnsiString name, int amount, int cehNumber){
	Head=First;
	while (Head->Next!=NULL)
		Head=Head->Next;
	Head->Next=new ListElement;
	Head=Head->Next;
	Head->Name=name;
	Head->Amount=amount;
	Head->CehNumber=cehNumber;
	Head->Next=NULL;
}

void List::showList(){
	Head=First;
	int i=0;
	while (Head!=NULL){
		Form1->StringGrid1->Cells[0][i]=Head->Name;
		Form1->StringGrid1->Cells[1][i]=Head->Amount;
		Form1->StringGrid1->Cells[2][i]=Head->CehNumber;
		i++;
		Head=Head->Next;
	}
}

void List::findProduction(AnsiString product){
	Head=First;
	int i=0;
	while (Head!=NULL){
		if (Head->Name==product) {
			Form1->StringGrid1->Cells[0][i]=Head->Name;
			Form1->StringGrid1->Cells[1][i]=Head->Amount;
			Form1->StringGrid1->Cells[2][i]=Head->CehNumber;
			i++;
		}
		Head=Head->Next;
	}
}

void List::findCEH(int number){
	Head=First;
	int i=0;
	while (Head!=NULL){
		if (Head->CehNumber==number) {
			Form1->StringGrid1->Cells[0][i]=Head->Name;
			Form1->StringGrid1->Cells[1][i]=Head->Amount;
			Form1->StringGrid1->Cells[2][i]=Head->CehNumber;
			i++;
		}
		Head=Head->Next;
	}
}

void List::findAmount(int amount){
	Head=First;
	int i=0;
	while (Head!=NULL){
		ListElement *tempHead=Head->Next;
		int sum=Head->Amount;
		while (tempHead!=NULL){
			if (tempHead->CehNumber==Head->CehNumber) {
				sum+=tempHead->Amount;
			}
			tempHead=tempHead->Next;
		}
		if (sum>=amount) {
			tempHead=Head;
			while (tempHead!=NULL){
				if (tempHead->CehNumber==Head->CehNumber) {
					Form1->StringGrid1->Cells[0][i]=tempHead->Name;
					Form1->StringGrid1->Cells[1][i]=tempHead->Amount;
					Form1->StringGrid1->Cells[2][i]=tempHead->CehNumber;
					i++;
				}
				tempHead=tempHead->Next;
			}
			break;
		}
		Head=Head->Next;
	}
}

bool List::deleteProduction(AnsiString name){
	Head=First;
	if (Head->Name==name) {
		if (Head->Next!=NULL) {
			Head=Head->Next;
			delete First;
			First=Head;
		}
		else {
			delete Head;
			Head=new ListElement;
			First=Head;
			Head->Next=NULL;
			return false;
        }
	}
	while(Head->Next!=NULL){
		if (Head->Name==name) {
			ListElement* tempHead=First;
			while (tempHead->Next!=Head) tempHead=tempHead->Next;
			tempHead->Next=Head->Next;
			delete Head;
			Head=tempHead->Next;
		}
		Head=Head->Next;
	}
	return true;
}
